def find_factors(n):
    for i in range(2, n):
        if n % i == 0:
            return i, n // i
    return None, None

def extended_gcd(a, b):
    if b == 0:
        return a, 1, 0
    gcd, x1, y1 = extended_gcd(b, a % b)
    x, y = y1, x1 - (a // b) * y1
    return gcd, x, y

def mod_inverse(e, phi):
    gcd, x, _ = extended_gcd(e, phi)
    if gcd != 1:
        return None  # No inverse exists
    return x % phi

# Given
e = 31
n = 3599

# Step 1: Find p and q
p, q = find_factors(n)
print(f"Found factors: p = {p}, q = {q}")

# Step 2: Compute Ï†(n)
phi_n = (p - 1) * (q - 1)
print(f"phi(n) = {phi_n}")

# Step 3: Compute d (private key)
d = mod_inverse(e, phi_n)
print(f"Private key d = {d}")
